#!/bin/bash

#initialize conda
source /data/storage/miniforge/etc/profile.d/conda.sh
#initialize megadetector
export PYTHONPATH="$HOME/mega/MegaDetector:$HOME/mega/yolov5"

#pathes
path_input_dir=/data/dataset/raw_images
path_json_detect_file=/data/dataset/annotation/raw_images_detect.json
path_final_json=/data/dataset/annotation/raw_images_classifier.json
logdir=/data/images/path/to/logdir
crop_image_folder=/data/dataset/crop_images
output_dir=/data/dataset/output_images
weights=/data/models/efficientnet_with_animals.pth
path_to_label=/data/storage/MegaClassifier/TrapperAI_index.json
#envs
hydra_env=/data/storage/hydraenv/bin/activate
#python scripts
run_detector_batch=/home/animal_detection/mega/MegaDetector/megadetector/detection/run_detector_batch.py
crop_detections=/home/animal_detection/mega/MegaDetector/megadetector/classification/crop_detections.py
classifier=/data/storage/Sign-language-translator/classifier.py

#activate venv for megadetector
conda activate cameratraps-detector
#run megadetector
python3.8 $run_detector_batch MDV5A $path_input_dir $path_json_detect_file --output_relative_filenames --recursive --checkpoint_frequency 10000 --quiet
#initialize for crops_detection.py
conda activate cameratraps-classifier
#run crops detection
python3.9 $crop_detections -i $path_input_dir --save-full-images --square-crops -t 0.1 -n 6 --logdir $logdir $path_json_detect_file $crop_image_folder
conda deactivate
#activate venv for classifier
source $hydra_env
#run classifier
python3 $classifier $path_input_dir $crop_image_folder $output_dir $path_json_detect_file $path_final_json $weights $path_to_label



